.modal {
  background: #fad7a0;
  width: 50vw;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

  height: 80vh;

  border: 2px solid #000;
  box-shadow: 2rem;
  padding: 1rem;
  border-radius: 0.7rem;
  outline: 0;
}

@media only screen and (max-width: 600px) {
  .modal {
    width: 80vw;
  }
  .image {
  }
}

@media only screen and (min-width: 768px) {
  .modal {
    width: 35vw;
  }
}

.masonryImage {
  background: rgba(67, 67, 67, 0.381);
  box-shadow: inset 0 0 100px black;
  cursor: pointer;
}

.item {
  margin: 0.1rem auto;
  padding: 0;
  font-size: 0.7rem;
  text-align: left;
}

.right {
  text-align: right;
}

.item__desc {
  padding: 0rem;
  margin: 0;
  margin: 0;
  padding: 0;
}

.quote {
  padding: 0rem;
  margin: 0;
  margin-top: 1rem;
  padding: 0;
  color: white;
  font-style: italic;
  font-weight: bold;
  font: Georgia, serif;
}

.item__desc--title {
  margin: 0;
  padding: 0;
  font-weight: bold;
}

.image {
  /* display: "block"; */
  width: 100%;
  height: 80%;
  margin: 0 auto;
  padding: 0;
  border-radius: 1rem;
}
.imageContainer {
  /* position: relative;
  text-align: left;
  color: white; */

  align-items: center;
  height: 65%;
  width: 100%;
  border: 0px solid black;
  display: grid;
}
.actImg {
  display: block;
  height: 100%;
  width: 100%;

  padding: 0;
  background: no-repeat;
  background-size: contain;
  background-position: center;
  margin: auto;
  /* background: no-repeat; */

  /* width: 100%;  */
  /* height: 100%;
  object-fit: contain; */
  /* background-size: cover !important; */

  /* display: block;
  height: auto;
  margin: 0 auto; */
  /* max-height: 100%;
  max-width: 100%; */
}
.textcontainer {
  position: relative;
}

.textcontainer-x-text {
  position: absolute;
  bottom: 8px;
  left: 16px;
}

.imageText {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.img-hover-zoom {
  /* [1.1] Set it as per your need */
  overflow: hidden; /* [1.2] Hide the overflowing of child elements */
}

/* [2] Transition property for smooth transformation of images */
.img-hover-zoom img {
  transition: transform 0.5s ease;
}

/* [3] Finally, transforming the image when container gets hovered */
.img-hover-zoom:hover img {
  transform: scale(1.5);
}

.boxButton {
  position: absolute;
  top: 0;
  right: 0;
  background-color: rgba(67, 67, 67, 0.381);
  font-size: 1.5rem;
  border-radius: 50%;
}

.test3 {
  background-image: linear-gradient(
      to bottom,
      rgba(0, 0, 0, 0),
      rgba(0, 0, 0, 0.6)
    ),
    url("https://images.nypl.org/index.php?id=1260019&t=w");
  height: 100%;
  width: 100%;
  background-size: cover;
  position: absolute;
  line-height: 300px;
  text-align: center;
  margin-left: 500px;
}
.test3 p {
  position: absolute;
  color: white;
  text-transform: uppercase;
  bottom: 10px;
  left: 180px;
}

.card {
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
  transition: 0.3s;
  height: 50%;
  background-color: rgba(50, 49, 43, 255);
  position: relative;
}
.card img {
  height: 100%;
  width: 100%;
  max-height: 100%;
  max-width: 100%;
  object-fit: contain;
}

.card:hover {
  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
}

.container {
  padding: 2px 16px;
}

.card__content {
  position: absolute;
  /* other styles (left, top, right, and padding) */
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  background: linear-gradient(to top, rgba(0, 0, 0, 0.85), transparent);
}

.bottom-left {
  position: absolute;
  bottom: 0px;
  left: 0px;
  color: white;
  size: 1.2rem;
  background: linear-gradient(to top, rgb(0, 0, 0), transparent);
}

.button {
  background-color: #3f433f;
  border: none;
  color: white;
  padding: 0.3rem 0rem;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 1rem;
  width: 100%;
  cursor: pointer;
}

.close {
  background-color: #666766;
}

@media print {
  .button {
    display: none;
  }
}
